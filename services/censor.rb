# services/censor.rb

class Censor
  # –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥—Ä—É–ø–ø–∞–º
  WHITELIST = {
    1551946392 => ["opt_zabaikalsk"],
    1628399582 => ["opt75"],
    2225744678 => ["nil", "opt75", "CHINA_LINE_MSK", "pirokindyk"], # nil ‚Üí —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π —Å sender_username = nil
    978474978 => ["Yuliya_Dorogan", "ke_7277","Vladsbogom96"]
  }.transform_values { |users| users.map(&:to_s).map(&:downcase) }

  def initialize(message_item)
    @message = message_item
  end

  def run
    puts "[CENSOR] üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è ID #{@message.id}..."

    text_preview = @message.processed_text ? @message.processed_text.truncate(100) : "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"

    puts "[CENSOR] üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: #{text_preview}"

    if check_sender_whitelist
      puts "[CENSOR] ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã ‚Äî —Ü–µ–Ω–∑—É—Ä–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞"
      return true
    else
      puts "[CENSOR] ‚ùå –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –∏–ª–∏ –≥—Ä—É–ø–ø–∞ –Ω–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è"
      return false
    end
  end

  private

  # üü¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
  def check_sender_whitelist
    puts "[CENSOR] üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞..."

    related_message_ids = MessageItemSource.where(message_item_id: @message.id).pluck(:message_id)

    if related_message_ids.blank?
      puts "[CENSOR] ‚ö†Ô∏è –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
      return false
    end

    puts "[CENSOR] üí¨ –ù–∞–π–¥–µ–Ω—ã message_id: #{related_message_ids.join(', ')}"

    related_messages = Message.where(id: related_message_ids).pluck(:group_id, :sender_username)

    if related_messages.empty?
      puts "[CENSOR] ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥—Ä—É–ø–ø–∞—Ö –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è—Ö"
      return false
    end

    puts "[CENSOR] üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."

    related_messages.each do |group_id, sender|
      if WHITELIST.key?(group_id)
        allowed_users = WHITELIST[group_id].map(&:to_s).map(&:downcase)

        # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å nil –∏–ª–∏ –ø—É—Å—Ç–æ–π
        if sender.nil? || sender.to_s.strip == ""
          if allowed_users.include?("nil")
            puts "[CENSOR] ‚úÖ –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: NIL (–≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞)"
            return true
          else
            puts "[CENSOR] ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω –∏ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
            next
          end
        end

        sender_down = sender.downcase

        if allowed_users.include?(sender_down)
          puts "[CENSOR] ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '#{sender}' –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
          return true
        else
          puts "[CENSOR] ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å '#{sender}' –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
        end

      else
        puts "[CENSOR] üü° –ì—Ä—É–ø–ø–∞ #{group_id} ‚Äî –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ. –¶–µ–Ω–∑—É—Ä–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞."
        return true
      end
    end

    puts "[CENSOR] ‚ùå –ù–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ –ø–æ –±–µ–ª–æ–º—É —Å–ø–∏—Å–∫—É"
    false
  end
end
