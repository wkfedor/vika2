# services/censor.rb

class Censor
  # –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥—Ä—É–ø–ø–∞–º
  WHITELIST = {
    1551946392 => ["opt_zabaikalsk"],
    1628399582 => ["opt75"],
    2225744678 => ["nil", "opt75", "CHINA_LINE_MSK", "pirokindyk","strknr"], # nil ‚Üí —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π —Å sender_username = nil
    978474978 => ["Yuliya_Dorogan", "ke_7277","Vladsbogom96"]
  }.transform_values { |users| users.map(&:to_s).map(&:downcase) }

  # –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤: –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ ‚Äî —Ü–µ–Ω–∑—É—Ä–∞
  BLACKLISTED_WORDS = [
    '–¥—Ä–æ–ø—à–∏–ø–ø–∏–Ω–≥',
    'dropshipping',
    '–ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'
  ].freeze

  # –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –ø–æ –≥—Ä—É–ø–ø–∞–º
  BLACKLISTED_EXTENSIONS = {
    1551946392 => ["xlsx", "xls", "pdf", "docx", "pptx"],
    1628399582 => ["xlsx", "xls", "pdf"],
    2225744678 => ["xlsx", "xls", "pdf"],
    978474978 => ["xlsx", "xls", "pdf"]
  }.freeze

  def initialize(message_item)
    @message = message_item
  end

  def run
    puts "[CENSOR] üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è ID #{@message.id}..."

    text_preview = @message.processed_text ? @message.processed_text.truncate(100) : "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"
    puts "[CENSOR] üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: #{text_preview}"

    unless check_sender_whitelist
      puts "[CENSOR] ‚ùå –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –ø—Ä–æ—à—ë–ª –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫"
      return false
    end

    if contains_blacklisted_words?
      puts "[CENSOR] ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞"
      return false
    end

    if has_blacklisted_attachments?
      puts "[CENSOR] ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è"
      return false
    end

    puts "[CENSOR] ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
    true
  end

  private

  # üü¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
  def check_sender_whitelist
    puts "[CENSOR] üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞..."

    related_message_ids = MessageItemSource.where(message_item_id: @message.id).pluck(:message_id)

    if related_message_ids.blank?
      puts "[CENSOR] ‚ö†Ô∏è –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"
      return false
    end

    puts "[CENSOR] üí¨ –ù–∞–π–¥–µ–Ω—ã message_id: #{related_message_ids.join(', ')}"

    related_messages = Message.where(id: related_message_ids).pluck(:group_id, :sender_username)

    if related_messages.empty?
      puts "[CENSOR] ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥—Ä—É–ø–ø–∞—Ö –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è—Ö"
      return false
    end

    puts "[CENSOR] üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."

    related_messages.each do |group_id, sender|
      if WHITELIST.key?(group_id)
        allowed_users = WHITELIST[group_id].map(&:to_s).map(&:downcase)

        # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å nil –∏–ª–∏ –ø—É—Å—Ç–æ–π
        if sender.nil? || sender.to_s.strip == ""
          if allowed_users.include?("nil")
            puts "[CENSOR] ‚úÖ –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: NIL (–≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞)"
            return true
          else
            puts "[CENSOR] ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω –∏ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
            next
          end
        end

        sender_down = sender.downcase

        if allowed_users.include?(sender_down)
          puts "[CENSOR] ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '#{sender}' –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
          return true
        else
          puts "[CENSOR] ‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å '#{sender}' –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id}"
        end

      else
        puts "[CENSOR] üü° –ì—Ä—É–ø–ø–∞ #{group_id} ‚Äî –ù–ï –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ. –¶–µ–Ω–∑—É—Ä–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞."
        return true
      end
    end

    puts "[CENSOR] ‚ùå –ù–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ –ø–æ –±–µ–ª–æ–º—É —Å–ø–∏—Å–∫—É"
    false
  end

  # üî¥ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
  def contains_blacklisted_words?
    text = @message.processed_text.to_s.downcase

    BLACKLISTED_WORDS.each do |word|
      if text.include?(word.downcase)
        puts "[CENSOR] üî• –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: '#{word}'"
        return true
      end
    end

    puts "[CENSOR] ‚úÖ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    false
  end

  # üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
  def has_blacklisted_attachments?
    puts "[CENSOR] üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π..."

    raw_media_files = @message.read_attribute_before_type_cast(:media_files)

    if raw_media_files.blank?
      puts "[CENSOR] üì¶ –í–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç"
      return false
    end

    begin
      media_files = JSON.parse(raw_media_files)
    rescue JSON::ParserError
      puts "[CENSOR] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ media_files"
      return false
    end

    # –ü–æ–ª—É—á–∞–µ–º group_id —Å–æ–æ–±—â–µ–Ω–∏—è
    related_group_ids = MessageItemSource
                          .where(message_item_id: @message.id)
                          .joins(:message)
                          .pluck("messages.group_id")
                          .uniq

    found_extension = nil

    media_files.each do |filepath|
      next unless filepath.is_a?(String)

      # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
      filename = filepath.to_s.strip

      # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
      parts = filename.split('.')
      next if parts.size < 2
      extension = parts.last.downcase

      related_group_ids.each do |group_id|
        blacklisted = BLACKLISTED_EXTENSIONS[group_id]&.map(&:downcase)
        next unless blacklisted

        if blacklisted.include?(extension)
          found_extension = extension
          puts "[CENSOR] üî• –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ '#{extension}' –¥–ª—è –≥—Ä—É–ø–ø—ã #{group_id} –≤ —Ñ–∞–π–ª–µ '#{filename}'"
          break
        end
      end

      return true if found_extension
    end

    puts "[CENSOR] ‚úÖ –ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    false
  end
end
