# services/message_processor_worker.rb

class MessageProcessorWorker
  INTERVAL = 10 # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

  def initialize(message_ids: nil)
    @custom_message_ids = message_ids
  end

  def run
    loop do
      process_messages
      sleep INTERVAL
    end
  end

  private

  def process_messages
    if @custom_message_ids && !@custom_message_ids.empty?
      messages = MessageItem.where(id: @custom_message_ids).where(status: 'new')
    else
      messages = MessageItem.where(status: 'new')
    end

    return log_info("‚ùå –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π") if messages.empty?

    log_info("üì¨ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É #{messages.count} —Å–æ–æ–±—â–µ–Ω–∏–π")

    messages.each do |msg|
      Thread.new do
        process_message(msg)
      end
    end
  end

  def process_message(message)
    log_info("[PROCESSING] –°–æ–æ–±—â–µ–Ω–∏–µ ID=#{message.id}, —Ç–µ–∫—Å—Ç: '#{message.processed_text[0..30] || ''}'")

    begin
      message.reload.start_processing!
      message.save!
      log_info("[STATUS] ID=#{message.id} ‚Üí processing")
      sleep 2

      censor = Censor.new(message)
      if censor.run
        message.reload.pass_censor!
        message.save!
        log_info("[STATUS] ID=#{message.id} ‚Üí censored")
      else
        message.reload.fail_censor!
        message.save!
        log_info("[STATUS] ID=#{message.id} ‚Üí censored_failed")
        return
      end

      sleep 2

      mutator = Mutator.new(message)
      if mutator.run
        message.reload.succeed_mutation!
        message.save!
        log_info("[STATUS] ID=#{message.id} ‚Üí mutated")
      else
        message.reload.fail_mutation!
        message.save!
        log_info("[STATUS] ID=#{message.id} ‚Üí mutation_failed")
        return
      end

      qc = QualityControl.new(message)
      qc.approve

    rescue => e
      log_error(e, context: "[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è ID=#{message.id}")
      message.reload.mark_as_error!
      message.save!
      log_info("[STATUS] ID=#{message.id} ‚Üí error")
    end
  end
end
